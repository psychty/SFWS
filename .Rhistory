panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 8, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_coastal_plot
SATOD_1718_coastal_plot <- ggplot(SATOD_1718_coastal , aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "\n") +
scale_y_continuous(limits = c(0,.162), breaks = seq(0,.16,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 8, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_crawley <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Crawley CCG", "NHS Sutton CCG", "NHS Swindon CCG","NHS Trafford CCG","NHS Bury CCG","NHS Havering CCG","NHS Dartford, Gravesham And Swanley CCG","NHS North East Hampshire And Farnham CCG", "NHS Solihull CCG","NHS Basildon And Brentwood CCG","NHS Bracknell And Ascot CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Dartford, Gravesham And Swanley CCG", "NHS Dartford,\nGravesham and\nSwanley CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Basildon And Brentwood CCG", "NHS Basildon and\nBrentwood CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Bracknell And Ascot CCG", "NHS Bracknell\nand Ascot CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Crawley CCG", "NHS Crawley CCG", "Not Crawley CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_crawley_plot <- ggplot(SATOD_1718_crawley, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "Current smoker prevalence\nat time of delivery") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 8, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_hms <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG","NHS South Gloucestershire CCG","NHS Rushcliffe CCG","NHS Surrey Downs CCG","NHS North East Hampshire And Farnham CCG","NHS East Surrey CCG","NHS North Hampshire CCG","NHS Mid Essex CCG","NHS Surrey Heath CCG","NHS East Leicestershire And Rutland CCG","NHS Newbury And District CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Horsham And Mid Sussex CCG", "NHS Horsham and\nMid Sussex CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS South Gloucestershire CCG", "NHS South\nGloucestershire\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Downs CCG", "NHS Surrey\nDowns CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Heath CCG", "NHS Surrey\nHeath CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Surrey CCG", "NHS East\nSurrey CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Rushcliffe CCG", "NHS Rushcliffe\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North Hampshire CCG", "NHS North\nHampshire CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Mid Essex CCG", "NHS Mid Essex\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Leicestershire And Rutland CCG", "NHS East\nLeicestershire\nand Rutland CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Newbury And District CCG", "NHS Newbury\nand District CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Horsham and\nMid Sussex CCG", "NHS Horsham and Mid Sussex CCG", "Not Horsham and Mid Sussex CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_hms_plot <- ggplot(SATOD_1718_hms, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .25) +
labs(x = "Clinical Commissioning Group",
y = "\n") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 8, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
satod_ccgs <- multiplot(SATOD_1718_coastal_plot, SATOD_1718_crawley_plot, SATOD_1718_hms_plot)
SATOD_1718_coastal_plot <- ggplot(SATOD_1718_coastal , aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "\n") +
scale_y_continuous(limits = c(0,.162), breaks = seq(0,.16,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_crawley <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Crawley CCG", "NHS Sutton CCG", "NHS Swindon CCG","NHS Trafford CCG","NHS Bury CCG","NHS Havering CCG","NHS Dartford, Gravesham And Swanley CCG","NHS North East Hampshire And Farnham CCG", "NHS Solihull CCG","NHS Basildon And Brentwood CCG","NHS Bracknell And Ascot CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Dartford, Gravesham And Swanley CCG", "NHS Dartford,\nGravesham and\nSwanley CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Basildon And Brentwood CCG", "NHS Basildon and\nBrentwood CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Bracknell And Ascot CCG", "NHS Bracknell\nand Ascot CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Crawley CCG", "NHS Crawley CCG", "Not Crawley CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_crawley_plot <- ggplot(SATOD_1718_crawley, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "Current smoker prevalence\nat time of delivery") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_hms <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG","NHS South Gloucestershire CCG","NHS Rushcliffe CCG","NHS Surrey Downs CCG","NHS North East Hampshire And Farnham CCG","NHS East Surrey CCG","NHS North Hampshire CCG","NHS Mid Essex CCG","NHS Surrey Heath CCG","NHS East Leicestershire And Rutland CCG","NHS Newbury And District CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Horsham And Mid Sussex CCG", "NHS Horsham and\nMid Sussex CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS South Gloucestershire CCG", "NHS South\nGloucestershire\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Downs CCG", "NHS Surrey\nDowns CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Heath CCG", "NHS Surrey\nHeath CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Surrey CCG", "NHS East\nSurrey CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Rushcliffe CCG", "NHS Rushcliffe\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North Hampshire CCG", "NHS North\nHampshire CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Mid Essex CCG", "NHS Mid Essex\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Leicestershire And Rutland CCG", "NHS East\nLeicestershire\nand Rutland CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Newbury And District CCG", "NHS Newbury\nand District CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Horsham and\nMid Sussex CCG", "NHS Horsham and Mid Sussex CCG", "Not Horsham and Mid Sussex CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_hms_plot <- ggplot(SATOD_1718_hms, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .25) +
labs(x = "Clinical Commissioning Group",
y = "\n") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(SATOD_1718_coastal_plot, SATOD_1718_crawley_plot, SATOD_1718_hms_plot)
SATOD_1718_coastal_plot <- ggplot(SATOD_1718_coastal , aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "\n") +
scale_y_continuous(limits = c(0,.162), breaks = seq(0,.16,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7.5, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_crawley <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Crawley CCG", "NHS Sutton CCG", "NHS Swindon CCG","NHS Trafford CCG","NHS Bury CCG","NHS Havering CCG","NHS Dartford, Gravesham And Swanley CCG","NHS North East Hampshire And Farnham CCG", "NHS Solihull CCG","NHS Basildon And Brentwood CCG","NHS Bracknell And Ascot CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Dartford, Gravesham And Swanley CCG", "NHS Dartford,\nGravesham and\nSwanley CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Basildon And Brentwood CCG", "NHS Basildon and\nBrentwood CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Bracknell And Ascot CCG", "NHS Bracknell\nand Ascot CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Crawley CCG", "NHS Crawley CCG", "Not Crawley CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_crawley_plot <- ggplot(SATOD_1718_crawley, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .3) +
labs(x = "",
y = "Current smoker prevalence\nat time of delivery") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7.5, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
SATOD_1718_hms <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG","NHS South Gloucestershire CCG","NHS Rushcliffe CCG","NHS Surrey Downs CCG","NHS North East Hampshire And Farnham CCG","NHS East Surrey CCG","NHS North Hampshire CCG","NHS Mid Essex CCG","NHS Surrey Heath CCG","NHS East Leicestershire And Rutland CCG","NHS Newbury And District CCG")) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Horsham And Mid Sussex CCG", "NHS Horsham and\nMid Sussex CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS South Gloucestershire CCG", "NHS South\nGloucestershire\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Downs CCG", "NHS Surrey\nDowns CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Surrey Heath CCG", "NHS Surrey\nHeath CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Surrey CCG", "NHS East\nSurrey CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Rushcliffe CCG", "NHS Rushcliffe\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North East Hampshire And Farnham CCG", "NHS North East\nHampshire and\nFarnham CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS North Hampshire CCG", "NHS North\nHampshire CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Mid Essex CCG", "NHS Mid Essex\nCCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS East Leicestershire And Rutland CCG", "NHS East\nLeicestershire\nand Rutland CCG", Org_Name)) %>%
mutate(Org_Name = ifelse(Org_Name == "NHS Newbury And District CCG", "NHS Newbury\nand District CCG", Org_Name)) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
mutate(CCG_main = ifelse(Org_Name == "NHS Horsham and\nMid Sussex CCG", "NHS Horsham and Mid Sussex CCG", "Not Horsham and Mid Sussex CCG"))%>%
arrange(Percentage) %>%
mutate(Org_Name = factor(Org_Name, levels = Org_Name))
SATOD_1718_hms_plot <- ggplot(SATOD_1718_hms, aes(x = Org_Name, y = Percentage, fill = CCG_main)) +
geom_bar(stat = "identity") +
geom_hline(yintercept = .06, lwd = .8, lty = "dashed", colour = "#800000") +
geom_text(aes(label = "National ambition", y = 0.058, x = 11), size = 3, col = "#800000", hjust = 1, vjust = 1) +
geom_errorbar(aes(ymin = Lower_95_CI, ymax = Upper_95_CI), colour = "#111111", width = .25) +
labs(x = "Clinical Commissioning Group",
y = "\n") +
scale_y_continuous(limits = c(0,.16), breaks = seq(0,.2,.02), labels = percent_format(accuracy = 1)) +
stack_theme() +
scale_fill_manual(values = c("#B40E3E", "#B2B2B2")) +
theme(legend.position = "none",
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(colour = "#dbdbdb"),
axis.text.x = element_text(size = 7.5, hjust = 1, angle = 90),
plot.margin = unit(c(0.2,1,0.2,1), "cm"))
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(SATOD_1718_coastal_plot, SATOD_1718_crawley_plot, SATOD_1718_hms_plot)
View(SATOD_1718)
SATOD_1718_hms <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG", "NHS Coasta West Sussex CCG", "NHS Crawley CCG")) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
arrange(Percentage)
SATOD_1718wsx <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG", "NHS Coasta West Sussex CCG", "NHS Crawley CCG")) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
arrange(Percentage)
SATOD_1718wsx <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG", "NHS Coastal West Sussex CCG", "NHS Crawley CCG")) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = Smokers / (Maternities - `Not known`),
Lower_95_CI = wilson_lower(Smokers, (Maternities - `Not known`)),
Upper_95_CI = wilson_upper(Smokers, (Maternities - `Not known`))) %>%
mutate(Sex = "Females") %>%
arrange(Percentage)
View(SATOD_1718wsx)
Upper_95_CI = round(wilson_upper(Smokers, (Maternities - `Not known`))*100,1) %>%
View(SATOD_1718wsx)
SATOD_1718wsx <- SATOD_1718 %>%
filter(Org_Name %in% c("NHS Horsham And Mid Sussex CCG", "NHS Coastal West Sussex CCG", "NHS Crawley CCG")) %>%
select(Org_Name, Metric, Value, Year) %>%
spread(key = "Metric", value = "Value") %>%
mutate(Percentage = round(Smokers / (Maternities - `Not known`)*100,1),
Lower_95_CI = round(wilson_lower(Smokers, (Maternities - `Not known`))*100,1),
Upper_95_CI = round(wilson_upper(Smokers, (Maternities - `Not known`))*100,1)) %>%
mutate(Sex = "Females") %>%
arrange(Percentage)
View(SATOD_1718wsx)
getwd()
getwd()
setwd("C:\Users\Rich\Documents\sfws-project-folder")
setwd("C:/Users/Rich/Documents/sfws-project-folder")
getwd()
AP_raw <- read_excel("./SFWS Action Plan.xlsx") %>%
mutate(timeframe_short = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE, "shortterm", NA),
timeframe_medium = ifelse(grepl("M", timeframe, ignore.case = TRUE) == TRUE, "mediumterm", NA),
timeframe_long = ifelse(grepl("L", timeframe, ignore.case = TRUE) == TRUE, "longterm", NA)) %>%
mutate(ongoing = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE & grepl("M", timeframe, ignore.case = TRUE) == TRUE & grepl("L", timeframe, ignore.case = TRUE) == TRUE, "ongoing", NA))  %>%
mutate(timeframe_js = trimws(gsub("NA", "", paste(timeframe_short, timeframe_medium, timeframe_long, ongoing, sep = " ")), which = "left")) %>%
mutate(level_individual = ifelse(grepl("I", level, ignore.case = TRUE) == TRUE, "individual", NA),
level_community = ifelse(grepl("C", level, ignore.case = TRUE) == TRUE, "community", NA),
level_environment = ifelse(grepl("E", level, ignore.case = TRUE) == TRUE, "environment", NA)) %>%
mutate(level_js = trimws(gsub("NA", "", paste(level_individual, level_community, level_environment, sep = " ")), which = "left"))
# SFWS_Action_plan
library(tidyverse)
library(readxl)
setwd("C:/Users/Rich/Documents/sfws-project-folder")
AP_raw <- read_excel("./SFWS Action Plan.xlsx") %>%
mutate(timeframe_short = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE, "shortterm", NA),
timeframe_medium = ifelse(grepl("M", timeframe, ignore.case = TRUE) == TRUE, "mediumterm", NA),
timeframe_long = ifelse(grepl("L", timeframe, ignore.case = TRUE) == TRUE, "longterm", NA)) %>%
mutate(ongoing = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE & grepl("M", timeframe, ignore.case = TRUE) == TRUE & grepl("L", timeframe, ignore.case = TRUE) == TRUE, "ongoing", NA))  %>%
mutate(timeframe_js = trimws(gsub("NA", "", paste(timeframe_short, timeframe_medium, timeframe_long, ongoing, sep = " ")), which = "left")) %>%
mutate(level_individual = ifelse(grepl("I", level, ignore.case = TRUE) == TRUE, "individual", NA),
level_community = ifelse(grepl("C", level, ignore.case = TRUE) == TRUE, "community", NA),
level_environment = ifelse(grepl("E", level, ignore.case = TRUE) == TRUE, "environment", NA)) %>%
mutate(level_js = trimws(gsub("NA", "", paste(level_individual, level_community, level_environment, sep = " ")), which = "left"))
AP_raw <- AP_raw %>%
mutate(how_many_tf = rowSums(!is.na(AP_raw[c("timeframe_short", "timeframe_medium", "timeframe_long", "ongoing")]))) %>%
mutate(timeframe_label = ifelse(how_many_tf == 4, "Ongoing",
ifelse(how_many_tf == 2, trimws(gsub("NA and", "", paste(timeframe_short, timeframe_medium, timeframe_long, sep = " and ")), which = "left"),
ifelse(how_many_tf == 1, timeframe_js, NA)))) %>%
mutate(timeframe_label = gsub("NA ", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("and NA", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("shortterm", "Short term", timeframe_label)) %>%
mutate(timeframe_label = gsub("mediumterm", "Medium term", timeframe_label)) %>%
mutate(timeframe_label = gsub("longterm", "Long term", timeframe_label)) %>%
mutate(how_many_levels = rowSums(!is.na(AP_raw[c("level_individual", "level_community", "level_environment")]))) %>%
mutate(levels_label = ifelse(how_many_levels == 3, "All levels",
ifelse(how_many_levels == 2, trimws(gsub("NA and", "", paste(capwords(level_individual, strict = TRUE), capwords(level_community, strict = TRUE), capwords(level_environment, strict = TRUE), sep = " and ")), which = "left"),
ifelse(how_many_levels == 1, capwords(level_js, strict = TRUE), NA)))) %>%
mutate(levels_label = gsub("NA ", "", levels_label)) %>%
mutate(partner_label = ifelse(grepl(",", partners, ignore.case = TRUE) == TRUE, "Multiple partners", partners)) %>%
mutate(partner_label = gsub("Western Sussex Hospitals NHS Foundation Trust", '<abbr title="Western Sussex Hospital NHS Foundation Trust">WSHFT</abbr>', partner_label)) %>%
mutate(partner_js = partners) %>%
mutate(partner_js = gsub("Trading Standards", "trading_standards", partner_js)) %>%
mutate(partner_js = gsub("Local Maternity System", "lms", partner_js)) %>%
mutate(partner_js = gsub("Arun Wellbeing", "arun_wellbeing", partner_js)) %>%
mutate(partner_js = gsub("Fire Service", "fire_service", partner_js)) %>%
mutate(partner_js = gsub("Public Health", "public_health", partner_js)) %>%
mutate(partner_js = gsub("Worthing Wellbeing", "worthing_wellbeing", partner_js)) %>%
mutate(partner_js = gsub("all hubs", "all_hubs", partner_js, ignore.case = TRUE)) %>%
mutate(partner_js = gsub("Maternity at Western Hospitals", "maternity wsht", partner_js)) %>%
mutate(partner_js = gsub("Health4Families", "h4f", partner_js)) %>%
mutate(partner_js = gsub("Prisons", "prisons", partner_js)) %>%
mutate(partner_js = gsub("Communities", "communities", partner_js)) %>%
mutate(partner_js = gsub("Western Sussex Hospitals NHS Foundation Trust", "wsht", partner_js)) %>%
mutate(partner_js = gsub("Sussex Community NHS Foundation Trust", "scft", partner_js)) %>%
mutate(partner_js = gsub(",", "", partner_js)) %>%
mutate(partner_js = ifelse(grepl("arun_wellbeing", partner_js, ignore.case = TRUE) == TRUE & grepl("worthing_wellbeing", partner_js, ignore.case = TRUE) == TRUE, paste0(partner_js, " all_hubs"), partner_js))
capwords = function(s, strict = FALSE) {
cap = function(s) paste(toupper(substring(s, 1, 1)),
{s = substring(s, 2); if(strict) tolower(s) else s},sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))}
AP_raw <- read_excel("./SFWS Action Plan.xlsx") %>%
mutate(timeframe_short = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE, "shortterm", NA),
timeframe_medium = ifelse(grepl("M", timeframe, ignore.case = TRUE) == TRUE, "mediumterm", NA),
timeframe_long = ifelse(grepl("L", timeframe, ignore.case = TRUE) == TRUE, "longterm", NA)) %>%
mutate(ongoing = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE & grepl("M", timeframe, ignore.case = TRUE) == TRUE & grepl("L", timeframe, ignore.case = TRUE) == TRUE, "ongoing", NA))  %>%
mutate(timeframe_js = trimws(gsub("NA", "", paste(timeframe_short, timeframe_medium, timeframe_long, ongoing, sep = " ")), which = "left")) %>%
mutate(level_individual = ifelse(grepl("I", level, ignore.case = TRUE) == TRUE, "individual", NA),
level_community = ifelse(grepl("C", level, ignore.case = TRUE) == TRUE, "community", NA),
level_environment = ifelse(grepl("E", level, ignore.case = TRUE) == TRUE, "environment", NA)) %>%
mutate(level_js = trimws(gsub("NA", "", paste(level_individual, level_community, level_environment, sep = " ")), which = "left"))
AP_raw <- AP_raw %>%
mutate(how_many_tf = rowSums(!is.na(AP_raw[c("timeframe_short", "timeframe_medium", "timeframe_long", "ongoing")]))) %>%
mutate(timeframe_label = ifelse(how_many_tf == 4, "Ongoing",
ifelse(how_many_tf == 2, trimws(gsub("NA and", "", paste(timeframe_short, timeframe_medium, timeframe_long, sep = " and ")), which = "left"),
ifelse(how_many_tf == 1, timeframe_js, NA)))) %>%
mutate(timeframe_label = gsub("NA ", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("and NA", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("shortterm", "Short term", timeframe_label)) %>%
mutate(timeframe_label = gsub("mediumterm", "Medium term", timeframe_label)) %>%
mutate(timeframe_label = gsub("longterm", "Long term", timeframe_label)) %>%
mutate(how_many_levels = rowSums(!is.na(AP_raw[c("level_individual", "level_community", "level_environment")]))) %>%
mutate(levels_label = ifelse(how_many_levels == 3, "All levels",
ifelse(how_many_levels == 2, trimws(gsub("NA and", "", paste(capwords(level_individual, strict = TRUE), capwords(level_community, strict = TRUE), capwords(level_environment, strict = TRUE), sep = " and ")), which = "left"),
ifelse(how_many_levels == 1, capwords(level_js, strict = TRUE), NA)))) %>%
mutate(levels_label = gsub("NA ", "", levels_label)) %>%
mutate(partner_label = ifelse(grepl(",", partners, ignore.case = TRUE) == TRUE, "Multiple partners", partners)) %>%
mutate(partner_label = gsub("Western Sussex Hospitals NHS Foundation Trust", '<abbr title="Western Sussex Hospital NHS Foundation Trust">WSHFT</abbr>', partner_label)) %>%
mutate(partner_js = partners) %>%
mutate(partner_js = gsub("Trading Standards", "trading_standards", partner_js)) %>%
mutate(partner_js = gsub("Local Maternity System", "lms", partner_js)) %>%
mutate(partner_js = gsub("Arun Wellbeing", "arun_wellbeing", partner_js)) %>%
mutate(partner_js = gsub("Fire Service", "fire_service", partner_js)) %>%
mutate(partner_js = gsub("Public Health", "public_health", partner_js)) %>%
mutate(partner_js = gsub("Worthing Wellbeing", "worthing_wellbeing", partner_js)) %>%
mutate(partner_js = gsub("all hubs", "all_hubs", partner_js, ignore.case = TRUE)) %>%
mutate(partner_js = gsub("Maternity at Western Hospitals", "maternity wsht", partner_js)) %>%
mutate(partner_js = gsub("Health4Families", "h4f", partner_js)) %>%
mutate(partner_js = gsub("Prisons", "prisons", partner_js)) %>%
mutate(partner_js = gsub("Communities", "communities", partner_js)) %>%
mutate(partner_js = gsub("Western Sussex Hospitals NHS Foundation Trust", "wsht", partner_js)) %>%
mutate(partner_js = gsub("Sussex Community NHS Foundation Trust", "scft", partner_js)) %>%
mutate(partner_js = gsub(",", "", partner_js)) %>%
mutate(partner_js = ifelse(grepl("arun_wellbeing", partner_js, ignore.case = TRUE) == TRUE & grepl("worthing_wellbeing", partner_js, ignore.case = TRUE) == TRUE, paste0(partner_js, " all_hubs"), partner_js))
AP_ready <- AP_raw %>%
select(ap_number, ap_title, ap_text, success, progress, achieved, partners,partner_label, partner_js, hic_number, hic_label, hic_class, timeframe_js, timeframe_label, level_js, levels_label) %>%
mutate(div_1 = gsub("NA", "", paste('<div class = "grid-item', hic_class, timeframe_js, level_js, partner_js,'">', sep = " "))) %>%
mutate(div_2 = gsub("NA", "", paste0('<p class = "ap_number">',ap_number,'</p>'))) %>%
mutate(div_3 = gsub("NA", "", paste0('<p class = "ap_title">', ap_title,'</p>'))) %>%
mutate(div_4 = gsub("NA", "", paste0('<p class = "ap_text">', ap_text,'</p>'))) %>%
mutate(div_5 = gsub("NA", "", paste0('<p class = "success">', success,'</p>'))) %>%
mutate(div_6 = gsub("NA", "", paste0('<p class = "partner_label">', partner_label,'</p>'))) %>%
mutate(div_7 = gsub("NA", "", paste0('<p class = "hic_number">', hic_number,'</p>'))) %>%
mutate(div_8 = gsub("NA", "", paste0('<p class = "hic_label">', hic_label,'</p>'))) %>%
mutate(div_9 = gsub("NA", "", paste0('<p class = "progress">', progress,'</p>'))) %>%
mutate(div_10 = gsub("NA", "", paste0('<p class = "achieved">', achieved,'</p>'))) %>%
mutate(div_11 = gsub("NA", "", paste0('<p class = "timeframe_label">', timeframe_label,'</p>'))) %>%
mutate(div_12 = gsub("NA", "", paste0('<p class = "levels_label">', levels_label,'</p>'))) %>%
mutate(div_13 = paste0('<div class="tooltip_',hic_class,'">'),
div_14 = paste0("<h2>",ap_title, "</h2>"),
div_15 = paste0("<p>", ap_text, "</p>"),
div_16 = paste0("<h3>What will success look like?</h3>"),
div_17 = paste0("<p>", success, "</p>"),
div_18 = paste0("<h3>Who are key stakeholders for this action be complete?</h3>"),
div_19 = paste0("<p>",partners,"</p>"),
div_20 = "</div>")
# We could include links or an update of progress etc.
AP_t <- gather(as.data.frame(t(AP_ready[c("div_1","div_2","div_3","div_4","div_5","div_6","div_7","div_8","div_9","div_10","div_11","div_12","div_13","div_14","div_15","div_16","div_17","div_18","div_19","div_20","div_20")])))
write.csv(AP_t[c("value")], "./actionplan_html.csv", row.names = FALSE)
