Age_band_type = "10 years")
ONS_projection_1833_broad <- ONS_projections_SYOA_plus_UTLA %>%
filter(AREA_NAME %in% Areas_to_include & AGE_GROUP != "All ages") %>%
mutate(Age = as.numeric(gsub(" and over", "", AGE_GROUP))) %>%
mutate(`Age group` = ifelse(Age <= 17, "0-17 years", ifelse(Age <= 44, "18-44 years", ifelse(Age <= 64, "45-64 years", "65+ years")))) %>%
group_by(AREA_NAME, AREA_CODE, SEX, `Age group`) %>%
summarise(`2018` = sum(`2018`, na.rm = TRUE),
`2019` = sum(`2019`, na.rm = TRUE),
`2020` = sum(`2020`, na.rm = TRUE),
`2021` = sum(`2021`, na.rm = TRUE),
`2022` = sum(`2022`, na.rm = TRUE),
`2023` = sum(`2023`, na.rm = TRUE),
`2024` = sum(`2024`, na.rm = TRUE),
`2025` = sum(`2025`, na.rm = TRUE),
`2026` = sum(`2026`, na.rm = TRUE),
`2027` = sum(`2027`, na.rm = TRUE),
`2028` = sum(`2028`, na.rm = TRUE),
`2029` = sum(`2029`, na.rm = TRUE),
`2030` = sum(`2030`, na.rm = TRUE),
`2031` = sum(`2031`, na.rm = TRUE),
`2032` = sum(`2032`, na.rm = TRUE),
`2033` = sum(`2033`, na.rm = TRUE)) %>%
ungroup() %>%
mutate(SEX = capwords(SEX)) %>%
rename(Area_name = AREA_NAME,
Area_code = AREA_CODE,
Sex = SEX) %>%
mutate(Sex = ifelse(Sex == "Females", "Female", ifelse(Sex == "Males", "Male", Sex))) %>%
gather(Year, Population, `2018`:`2033`, factor_key = TRUE) %>%
mutate(Data_type = "Projected - ONS",
Age_band_type = "broad years")
ONS_projection_CCG_1833_quinary <- read_csv("~/Projecting-Health/2016 SNPP CCG pop females.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character())) %>%
bind_rows(read_csv("~/Projecting-Health/2016 SNPP CCG pop males.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character()))) %>%
filter(AREA_NAME %in% Areas_to_include & AGE_GROUP != "All ages") %>%
mutate(Age = as.numeric(gsub(" and over", "", AGE_GROUP))) %>%
mutate(`Age group` = ifelse(Age <= 4, "0-4 years", ifelse(Age <= 9, "5-9 years", ifelse(Age <= 14, "10-14 years", ifelse(Age <= 19, "15-19 years", ifelse(Age <= 24, "20-24 years", ifelse(Age <= 29, "25-29 years",ifelse(Age <= 34, "30-34 years", ifelse(Age <= 39, "35-39 years",ifelse(Age <= 44, "40-44 years", ifelse(Age <= 49, "45-49 years",ifelse(Age <= 54, "50-54 years", ifelse(Age <= 59, "55-59 years",ifelse(Age <= 64, "60-64 years", ifelse(Age <= 69, "65-69 years",ifelse(Age <= 74, "70-74 years", ifelse(Age <= 79, "75-79 years",ifelse(Age <= 84, "80-84 years", ifelse(Age <= 89, "85-89 years", "90+ years"))))))))))))))))))) %>%
group_by(AREA_NAME, AREA_CODE, SEX, `Age group`) %>%
summarise(`2018` = sum(`2018`, na.rm = TRUE),
`2019` = sum(`2019`, na.rm = TRUE),
`2020` = sum(`2020`, na.rm = TRUE),
`2021` = sum(`2021`, na.rm = TRUE),
`2022` = sum(`2022`, na.rm = TRUE),
`2023` = sum(`2023`, na.rm = TRUE),
`2024` = sum(`2024`, na.rm = TRUE),
`2025` = sum(`2025`, na.rm = TRUE),
`2026` = sum(`2026`, na.rm = TRUE),
`2027` = sum(`2027`, na.rm = TRUE),
`2028` = sum(`2028`, na.rm = TRUE),
`2029` = sum(`2029`, na.rm = TRUE),
`2030` = sum(`2030`, na.rm = TRUE),
`2031` = sum(`2031`, na.rm = TRUE),
`2032` = sum(`2032`, na.rm = TRUE),
`2033` = sum(`2033`, na.rm = TRUE)) %>%
ungroup() %>%
mutate(SEX = capwords(SEX)) %>%
rename(Area_name = AREA_NAME,
Area_code = AREA_CODE,
Sex = SEX) %>%
mutate(Sex = ifelse(Sex == "Females", "Female", ifelse(Sex == "Males", "Male", Sex))) %>%
gather(Year, Population, `2018`:`2033`, factor_key = TRUE) %>%
mutate(Data_type = "Projected - ONS",
Age_band_type = "5 years")
ONS_projection_CCG_1833_10_year <- read_csv("~/Projecting-Health/2016 SNPP CCG pop females.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character())) %>%
bind_rows(read_csv("~/Projecting-Health/2016 SNPP CCG pop males.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character()))) %>%
filter(AREA_NAME %in% Areas_to_include & AGE_GROUP != "All ages") %>%
mutate(Age = as.numeric(gsub(" and over", "", AGE_GROUP))) %>%
mutate(`Age group` = ifelse(Age <= 9, "0-9 years", ifelse(Age <= 19, "10-19 years", ifelse(Age <= 29, "20-29 years", ifelse(Age <= 39, "30-39 years", ifelse(Age <= 49, "40-49 years", ifelse(Age <= 59, "50-59 years",ifelse(Age <= 69, "60-69 years", ifelse(Age <= 79, "70-79 years",ifelse(Age <= 89, "80-89 years", "90+ years")))))))))) %>%
group_by(AREA_NAME, AREA_CODE, SEX, `Age group`) %>%
summarise(`2018` = sum(`2018`, na.rm = TRUE),
`2019` = sum(`2019`, na.rm = TRUE),
`2020` = sum(`2020`, na.rm = TRUE),
`2021` = sum(`2021`, na.rm = TRUE),
`2022` = sum(`2022`, na.rm = TRUE),
`2023` = sum(`2023`, na.rm = TRUE),
`2024` = sum(`2024`, na.rm = TRUE),
`2025` = sum(`2025`, na.rm = TRUE),
`2026` = sum(`2026`, na.rm = TRUE),
`2027` = sum(`2027`, na.rm = TRUE),
`2028` = sum(`2028`, na.rm = TRUE),
`2029` = sum(`2029`, na.rm = TRUE),
`2030` = sum(`2030`, na.rm = TRUE),
`2031` = sum(`2031`, na.rm = TRUE),
`2032` = sum(`2032`, na.rm = TRUE),
`2033` = sum(`2033`, na.rm = TRUE)) %>%
ungroup() %>%
mutate(SEX = capwords(SEX)) %>%
rename(Area_name = AREA_NAME,
Area_code = AREA_CODE,
Sex = SEX) %>%
mutate(Sex = ifelse(Sex == "Females", "Female", ifelse(Sex == "Males", "Male", Sex))) %>%
gather(Year, Population, `2018`:`2033`, factor_key = TRUE) %>%
mutate(Data_type = "Projected - ONS",
Age_band_type = "10 years")
ONS_projection_CCG_1833_broad <- read_csv("~/Projecting-Health/2016 SNPP CCG pop females.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character())) %>%
bind_rows(read_csv("~/Projecting-Health/2016 SNPP CCG pop males.csv", col_types = cols(.default = col_double(),AREA_CODE = col_character(),AREA_NAME = col_character(),COMPONENT = col_character(),SEX = col_character(),AGE_GROUP = col_character()))) %>%
filter(AREA_NAME %in% Areas_to_include & AGE_GROUP != "All ages") %>%
mutate(Age = as.numeric(gsub(" and over", "", AGE_GROUP))) %>%
mutate(`Age group` = ifelse(Age <= 17, "0-17 years", ifelse(Age <= 44, "18-44 years", ifelse(Age <= 64, "45-64 years", "65+ years")))) %>%
group_by(AREA_NAME, AREA_CODE, SEX, `Age group`) %>%
summarise(`2018` = sum(`2018`, na.rm = TRUE),
`2019` = sum(`2019`, na.rm = TRUE),
`2020` = sum(`2020`, na.rm = TRUE),
`2021` = sum(`2021`, na.rm = TRUE),
`2022` = sum(`2022`, na.rm = TRUE),
`2023` = sum(`2023`, na.rm = TRUE),
`2024` = sum(`2024`, na.rm = TRUE),
`2025` = sum(`2025`, na.rm = TRUE),
`2026` = sum(`2026`, na.rm = TRUE),
`2027` = sum(`2027`, na.rm = TRUE),
`2028` = sum(`2028`, na.rm = TRUE),
`2029` = sum(`2029`, na.rm = TRUE),
`2030` = sum(`2030`, na.rm = TRUE),
`2031` = sum(`2031`, na.rm = TRUE),
`2032` = sum(`2032`, na.rm = TRUE),
`2033` = sum(`2033`, na.rm = TRUE)) %>%
ungroup() %>%
mutate(SEX = capwords(SEX)) %>%
rename(Area_name = AREA_NAME,
Area_code = AREA_CODE,
Sex = SEX) %>%
mutate(Sex = ifelse(Sex == "Females", "Female", ifelse(Sex == "Males", "Male", Sex))) %>%
gather(Year, Population, `2018`:`2033`, factor_key = TRUE) %>%
mutate(Data_type = "Projected - ONS",
Age_band_type = "broad years")
Areas_projections_file <- ONS_projection_1833_quinary %>%
bind_rows(ONS_projection_1833_10_year) %>%
bind_rows(ONS_projection_1833_broad) %>%
bind_rows(ONS_projection_CCG_1833_quinary) %>%
bind_rows(ONS_projection_CCG_1833_10_year) %>%
bind_rows(ONS_projection_CCG_1833_broad) %>%
left_join(Areas, by = c("Area_name" = "Area_Name")) %>%
select(Area_name, Area_Code, Area_Type, Sex, `Age group`,Age_band_type, Year, Population, Data_type) %>%
rename(Age_group = `Age group`,
Area_Name = Area_name)
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17.CCG.zip")}
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls", sheet = "Mid-2017 Males", skip = 5)
SAPE17_ccg_syoa_males <- read_xls("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls", sheet = "Mid-2017 Males", skip = 5)
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls", sheet = "Mid-2017 Males", skip = 5)
# from the extension
readxl::format_from_ext("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
#> [1] "xls"
# from the signature
readxl::format_from_signature("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
# from the extension
readxl::format_from_ext("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsz")
# from the extension
readxl::format_from_ext("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx")
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx", sheet = "Mid-2017 Males", skip = 5)
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls", sheet = "Mid-2017 Males", skip = 5)
library(rio)
install.packages('rio')
#install.packages('rio')
library(rio)
SAPE17_ccg_syoa_males <- import("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
?import()
SAPE17_ccg_syoa_males <- import("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls", which = "Mid-2017 Males")
import_list("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
import("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
library(RDCOMClient)
install.packages('RDCOMClient')
library(RDCOMClient)
convert_xls_to_xlsx<- function(in_folder,out_folder, delete_xls=F){
if(missing(out_folder)){
out_folder<- in_folder
}
all_xls<- list.files(in_folder, pattern = ".xls$")
if(length(all_xls)>0){
all_xls_out<- gsub(".xls$",".xlsx", all_xls)
try({
xls <- COMCreate("Excel.Application")
lapply(1:length(all_xls), function(i){
cat(i,"\n")
wb = xls[["Workbooks"]]$Open( normalizePath(paste(in_folder, all_xls[i], sep="\\")) )
wb$SaveAs( suppressWarnings( normalizePath(paste(out_folder, all_xls_out[i], sep="\\"))) , 51)
wb$Close()
})
xls$Quit()
}, silent = T)
if(delete_xls){
all_xlsx_now<- list.files(in_folder, pattern = ".xlsx$")
test<- setdiff(gsub(".xls$","", all_xls), gsub(".xlsx$","", all_xlsx_now))
if(length(test)==0){
try(unlink(paste(in_folder, all_xls, sep="\\")),silent = T)
}
}
}
return(invisible(0))
}
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt5mid2017ccgsyoaestimatesformatted.zip", "SAPE_17_CCG.zip", mode = "wb")
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt5mid2017ccgsyoaestimatesformatted.zip", "sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt5mid2017ccgsyoaestimatesformatted.zip", "sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt5mid2017ccgsyoaestimatesformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
SAPE17_ccg_syoa_males <- import("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-formatted.xls", which = "Mid-2017 Males")
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-formatted.xls", sheet = "Mid-2017 Males", skip = 5)
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT5-mid-2017-ccg-syoa-estimates-formatted.xls", sheet = "Mid-2017 Males", skip = 5)
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17.CCG.zip")}
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17.CCG.zip")}
file.remove("~/Projecting-Health/sape_17_CCG.zip")#}
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17_CCG.zip")}
excel_sheets("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
insinstall.packages('readxl')
install.packages('readxl')
install.packages('readxl')
library(readxl)
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17_CCG.zip")}
excel_sheets("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
?install.packages()
devtools::install_version('readxl', version = 1.0.0)
devtools::install_version('readxl', version = 1.0)
devtools::install_github("tidyverse/readxl")
devtools::install_github("tidyverse/readxl")
devtools::install_github("tidyverse/readxl")
library(readxl)
excel_sheets("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
library(readxl)
excel_sheets("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xls")
excel_sheets("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx")
if(!(file.exists("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx"))){
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/clinicalcommissioninggroupmidyearpopulationestimates/mid2017/sape20dt6mid2017ccgsyoaestimatesunformatted.zip", "~/Projecting-Health/sape_17_CCG.zip", mode = "wb")
unzip("~/Projecting-Health/sape_17_CCG.zip", exdir = "~/Projecting-Health")
file.remove("~/Projecting-Health/sape_17_CCG.zip")
paste0("R cannot read the xls file, you must open it and convert to xlsx")}
SAPE17_ccg_syoa_males <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx", sheet = "Mid-2017 Males", skip = 5)
SAPE17_ccg_syoa_females <- read_excel("~/Projecting-Health/SAPE20DT6-mid-2017-ccg-syoa-estimates-unformatted.xlsx", sheet = "Mid-2017 Females", skip = 5)
View(SAPE17_ccg_syoa_females)
library(readxl)
library(ggplot2)
library(scales)
library(tidyr)
library(reshape2)
library(readr)
download.file("https://www.ons.gov.uk/file?uri=/peoplepopulationandcommunity/populationandmigration/populationestimates/datasets/populationestimatesforukenglandandwalesscotlandandnorthernireland/mid2001tomid2017detailedtimeseries/ukdetailedtimeseries2001to2017.zip", "~/Projecting-Health/MYE_2001_2017.zip", mode = "wb")
unzip("~/Projecting-Health/MYE_2001_2017.zip", exdir = "~/Projecting-Health")
d1 <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=1870659585...1870659791,1870659801,1870659792...1870659800,1879048193...1879048573,1879048583,1879048574...1879048582,2013265921...2013265932&date=latestMINUS1-latest&gender=&c_age=&measures=20100&select=date_name,geography_name,geography_code,gender_name,c_age_name,measures_name,obs_value,obs_status_name")
View(d1)
NOMIS_LA_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&select=geography_code,geography_name")
NOMIS_LA_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=geography_code,geography_name")
View(NOMIS_LA_codes)
NOMIS_LA_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=geography_code,geography_name") %>%
unique()
View(NOMIS_LA_codes)
N_records_MYE <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=&recordlimit=1")
View(N_records_MYE)
N_records_MYE <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=recordcount&recordlimit=1")
N_records_MYE <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1")
View(N_records_MYE)
N_records_MYE <- as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1"))
N_records_MYE <- as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1"))/25000
N_records_MYE <- ceiling(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1"))/25000)
N_records_MYE <- ceiling(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
NOMIS_CCG_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&gender=&c_age=&measures=20100&select=geography_name,geography_code")
View(NOMIS_CCG_codes)
NOMIS_CCG_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=&date=latest&gender=&c_age=&measures=20100&select=geography_name,geography_code")
View(NOMIS_CCG_codes)
NOMIS_CCG_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&gender=&c_age=&measures=20100&select=geography_name,geography_code") %>%
unique()
N_records_MYE_CCG <- ceiling(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))
df <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=1")
View(df)
df <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=1") %>%
unique()
View(df)
df <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=25000") %>%
unique()
View(df)
i = 6
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) %>%
unique()
i = 5
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) %>%
unique()
View(df)
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) #%>%
View(df)
i = 6
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) #%>%
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double()))),0)/25000
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double()))),1)/25000
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double()))),2)/25000
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double()))),1)/25000
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000,1)
N_records_MYE_CCG <- round(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000,0)
N_records_MYE_CCG <- floor(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
i = N_records_MYE_CCG
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) #%>%
for(i in 1:N_records_MYE_CCG){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) %>%
unique() %>%
map_df()
}
library(readxl)
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(png)
library(tidyverse)
library(readxl)
library(reshape2)
library(scales)
library(viridis)
library(rgdal)
library(officer)
library(flextable)
library(tmaptools)
library(lemon)
library(leaflet)
library(fingertipsR)
library(PHEindicatormethods)
for(i in 1:N_records_MYE_CCG){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) %>%
unique() %>%
map_df()
}
?map_df
library(tidyverse)
install.packages("readxl")
library(readxl)
NOMIS_CCG_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character())
NOMIS_CCG_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character())
for(i in 1:N_records_MYE_CCG){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i)) %>%
unique()
NOMIS_CCG_codes <- NOMIS_CCG_codes %>%
bind_rows(df)
}
NOMIS_CCG_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character())
for(i in 0:N_records_MYE_CCG){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2010_1.data.csv?geography=1828716545...1828716739&date=latest&select=geography_code,geography_name&recordoffset=", 25000 * i), col_types = cols(GEOGRAPHY_CODE = col_character(),GEOGRAPHY_NAME = col_character())) %>%
unique()
NOMIS_CCG_codes <- NOMIS_CCG_codes %>%
bind_rows(df)
}
View(NOMIS_CCG_codes)
Areas_to_include <- c("Adur", "Arun", "Chichester", "Crawley", "Horsham", "Mid Sussex", "Worthing", "NHS Coastal West Sussex CCG","West Sussex", "NHS Crawley CCG", "NHS Horsham and Mid Sussex CCG")
# Areas_to_include <- c("Basingstoke and Deane","East Hampshire","Eastleigh","Fareham","Gosport","Hart","Havant","New Forest","Rushmoor","Test Valley","Hampshire", "Winchester", "NHS North East Hampshire and Farnham CCG", "NHS North Hampshire CCG", "NHS South Eastern Hampshire CCG", "NHS West Hampshire CCG", "NHS Fareham and Gosport CCG", "Portsmouth")
library(readxl)
library(readr)
library(plyr)
library(dplyr)
library(ggplot2)
library(png)
library(tidyverse)
library(readxl)
library(reshape2)
library(scales)
library(viridis)
library(rgdal)
library(officer)
library(flextable)
library(tmaptools)
library(lemon)
library(leaflet)
library(fingertipsR)
library(PHEindicatormethods)
NOMIS_LA_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography_name=adur&date=latest&select=geography_code,geography_name") %>%
unique()
NOMIS_LA_codes <- read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=geography_code,geography_name") %>%
unique()
# SFWS_Action_plan
library(tidyverse)
library(readxl)
setwd("C:/Users/Rich/Documents/sfws-project-folder")
capwords = function(s, strict = FALSE) {
cap = function(s) paste(toupper(substring(s, 1, 1)),
{s = substring(s, 2); if(strict) tolower(s) else s},sep = "", collapse = " " )
sapply(strsplit(s, split = " "), cap, USE.NAMES = !is.null(names(s)))}
AP_raw <- read_excel("./SFWS Action Plan.xlsx") %>%
mutate(timeframe_short = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE, "shortterm", NA),
timeframe_medium = ifelse(grepl("M", timeframe, ignore.case = TRUE) == TRUE, "mediumterm", NA),
timeframe_long = ifelse(grepl("L", timeframe, ignore.case = TRUE) == TRUE, "longterm", NA)) %>%
mutate(ongoing = ifelse(grepl("S", timeframe, ignore.case = TRUE) == TRUE & grepl("M", timeframe, ignore.case = TRUE) == TRUE & grepl("L", timeframe, ignore.case = TRUE) == TRUE, "ongoing", NA))  %>%
mutate(timeframe_js = trimws(gsub("NA", "", paste(timeframe_short, timeframe_medium, timeframe_long, ongoing, sep = " ")), which = "left")) %>%
mutate(level_individual = ifelse(grepl("I", level, ignore.case = TRUE) == TRUE, "individual", NA),
level_community = ifelse(grepl("C", level, ignore.case = TRUE) == TRUE, "community", NA),
level_place = ifelse(grepl("P", level, ignore.case = TRUE) == TRUE, "place", NA)) %>%
mutate(level_js = trimws(gsub("NA", "", paste(level_individual, level_community, level_place, sep = " ")), which = "left"))
# We have to split the code here because the next part calls AP_raw which is not created until the end of the command
AP_raw <- AP_raw %>%
mutate(how_many_tf = rowSums(!is.na(AP_raw[c("timeframe_short", "timeframe_medium", "timeframe_long", "ongoing")]))) %>%
mutate(timeframe_label = ifelse(how_many_tf == 4, "Ongoing",
ifelse(how_many_tf == 2, trimws(gsub("NA and", "", paste(timeframe_short, timeframe_medium, timeframe_long, sep = " and ")), which = "left"),
ifelse(how_many_tf == 1, timeframe_js, NA)))) %>%
mutate(timeframe_label = gsub("NA ", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("and NA", "", timeframe_label)) %>%
mutate(timeframe_label = gsub("shortterm", "Short term", timeframe_label)) %>%
mutate(timeframe_label = gsub("mediumterm", "Medium term", timeframe_label)) %>%
mutate(timeframe_label = gsub("longterm", "Long term", timeframe_label)) %>%
mutate(how_many_levels = rowSums(!is.na(AP_raw[c("level_individual", "level_community", "level_place")]))) %>%
mutate(levels_label = ifelse(how_many_levels == 3, "All levels",
ifelse(how_many_levels == 2, trimws(gsub("NA and", "", paste(capwords(level_individual, strict = TRUE), capwords(level_community, strict = TRUE), capwords(level_place, strict = TRUE), sep = " and ")), which = "left"),
ifelse(how_many_levels == 1, capwords(level_js, strict = TRUE), NA)))) %>%
mutate(levels_label = gsub("NA ", "", levels_label)) %>%
mutate(partner_label = ifelse(grepl(",", partners, ignore.case = TRUE) == TRUE, "Multiple partners", partners)) %>%
mutate(partner_label = gsub("Western Sussex Hospitals NHS Foundation Trust", '<abbr title="Western Sussex Hospital NHS Foundation Trust">WSHFT</abbr>', partner_label)) %>%
mutate(partner_js = partners) %>%
mutate(partner_js = gsub("Trading Standards", "trading_standards", partner_js)) %>%
mutate(partner_js = gsub("Local Maternity System", "lms", partner_js)) %>%
mutate(partner_js = gsub("Wellbeing programme", "wellbeing_programme", partner_js, ignore.case = TRUE)) %>%
mutate(partner_js = gsub("Fire Service", "fire_service", partner_js)) %>%
mutate(partner_js = gsub("Public Health", "public_health", partner_js)) %>%
mutate(partner_js = gsub("Maternity at Western Hospitals", "maternity wsht", partner_js)) %>%
mutate(partner_js = gsub("Health4Families", "h4f", partner_js)) %>%
mutate(partner_js = gsub("Prisons", "prisons", partner_js)) %>%
mutate(partner_js = gsub("Communities", "communities", partner_js)) %>%
mutate(partner_js = gsub("Western Sussex Hospitals NHS Foundation Trust", "wsht", partner_js)) %>%
mutate(partner_js = gsub("Sussex Community NHS Foundation Trust", "scft", partner_js)) %>%
mutate(partner_js = gsub("Primary Care", "primary_care", partner_js)) %>%
mutate(partner_js = gsub("District & Boroughs", "dandb", partner_js)) %>%
mutate(partner_js = gsub(",", "", partner_js))
AP_ready <- AP_raw %>%
select(ap_number, ap_title, ap_text, success, progress, achieved, partners,partner_label, partner_js, hic_number, hic_label, hic_class, timeframe_js, timeframe_label, level_js, levels_label) %>%
mutate(div_1 = gsub("NA", "", paste('<div class = "grid-item', hic_class, timeframe_js, level_js, partner_js,'">', sep = " "))) %>%
mutate(div_2 = gsub("NA", "", paste0('<p class = "ap_number">',ap_number,'</p>'))) %>%
mutate(div_3 = gsub("NA", "", paste0('<p class = "ap_title">', ap_title,'</p>'))) %>%
mutate(div_4 = gsub("NA", "", paste0('<p class = "ap_text">', ap_text,'</p>'))) %>%
mutate(div_5 = gsub("NA", "", paste0('<p class = "success">', success,'</p>'))) %>%
mutate(div_6 = gsub("NA", "", paste0('<p class = "partner_label">', partner_label,'</p>'))) %>%
mutate(div_7 = gsub("NA", "", paste0('<p class = "hic_number">', hic_number,'</p>'))) %>%
mutate(div_8 = gsub("NA", "", paste0('<p class = "hic_label">', hic_label,'</p>'))) %>%
mutate(div_9 = gsub("NA", "", paste0('<p class = "progress">', progress,'</p>'))) %>%
mutate(div_10 = gsub("NA", "", paste0('<p class = "achieved">', achieved,'</p>'))) %>%
mutate(div_11 = gsub("NA", "", paste0('<p class = "timeframe_label">', timeframe_label,'</p>'))) %>%
mutate(div_12 = gsub("NA", "", paste0('<p class = "levels_label">', levels_label,'</p>'))) %>%
mutate(div_13 = paste0('<div class="tooltip_',hic_class,'">'),
div_14 = paste0("<h2>",ap_title, "</h2>"),
div_15 = paste0("<p>", ap_text, "</p>"),
div_16 = paste0("<h3>What will success look like?</h3>"),
div_17 = paste0("<p>", success, "</p>"),
div_18 = paste0("<h3>Who are key partners for this action?</h3>"),
div_19 = paste0("<p>",partners,"</p>"),
div_20 = "</div>")
# We could include links or an update of progress etc.
AP_t <- gather(as.data.frame(t(AP_ready[c("div_1","div_2","div_3","div_4","div_5","div_6","div_7","div_8","div_9","div_10","div_11","div_12","div_13","div_14","div_15","div_16","div_17","div_18","div_19","div_20","div_20")])))
write.csv(AP_t[c("value")], "./actionplan_html.csv", row.names = FALSE)
N_records_MYE_LA <- ceiling(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
N_records_MYE_LA <- floor(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
NOMIS_LA_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character(), GEOGRAPHY = character())
for(i in 0:N_records_MYE_LA){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=&date=latest&select=geography_code,geography_name,geography&recordoffset=", 25000 * i), col_types = cols(GEOGRAPHY_CODE = col_character(),GEOGRAPHY_NAME = col_character(), GEOGRAPHY = col_character())) %>%
unique()
NOMIS_LA_codes <- NOMIS_LA_codes %>%
bind_rows(df)
}
View(NOMIS_LA_codes)
N_records_MYE_LA <- floor(as.numeric(read_csv("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=1870659585...1870659791,1870659801,1870659792...1870659800&date=latest&select=record_count&recordlimit=1", col_types = cols(RECORD_COUNT = col_double())))/25000)
NOMIS_LA_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character(), GEOGRAPHY = character())
NOMIS_LA_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character(), GEOGRAPHY = character())
for(i in 0:N_records_MYE_LA){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=1870659585...1870659791,1870659801,1870659792...1870659800&date=latest&select=geography_code,geography_name,geography&recordoffset=", 25000 * i), col_types = cols(GEOGRAPHY_CODE = col_character(),GEOGRAPHY_NAME = col_character(), GEOGRAPHY = col_character())) %>%
unique()
NOMIS_LA_codes <- NOMIS_LA_codes %>%
bind_rows(df)
}
View(NOMIS_LA_codes)
NOMIS_LA_codes <- data.frame(GEOGRAPHY_CODE = character(), GEOGRAPHY_NAME = character(), GEOGRAPHY = character())
for(i in 0:N_records_MYE_LA){
df <- read_csv(paste0("http://www.nomisweb.co.uk/api/v01/dataset/NM_2002_1.data.csv?geography=1870659585...1870659791,1870659801,1870659792...1870659800&date=latest&select=geography_code,geography_name,geography&recordoffset=", 25000 * i), col_types = cols(GEOGRAPHY_CODE = col_character(),GEOGRAPHY_NAME = col_character(), GEOGRAPHY = col_character())) %>%
unique()
NOMIS_LA_codes <- NOMIS_LA_codes %>%
bind_rows(df) %>%
filter(substr(GEOGRAPHY_CODE, 1, 1) == "E")
}
View(NOMIS_LA_codes)
if(!(file.exists("./Area_lookup_table.csv") & file.exists("./Area_types_table.csv"))){
LAD <- read_csv(url("https://opendata.arcgis.com/datasets/a267b55f601a4319a9955b0197e3cb81_0.csv"), col_types = cols(LAD17CD = col_character(),LAD17NM = col_character(),  LAD17NMW = col_character(),  FID = col_integer()))
Counties <- read_csv(url("https://opendata.arcgis.com/datasets/7e6bfb3858454ba79f5ab3c7b9162ee7_0.csv"), col_types = cols(CTY17CD = col_character(),  CTY17NM = col_character(),  Column2 = col_character(),  Column3 = col_character(),  FID = col_integer()))
lookup <- read_csv(url("https://opendata.arcgis.com/datasets/41828627a5ae4f65961b0e741258d210_0.csv"), col_types = cols(LTLA17CD = col_character(),  LTLA17NM = col_character(),  UTLA17CD = col_character(),  UTLA17NM = col_character(),  FID = col_integer()))
# This is a lower tier LA to upper tier LA lookup
UA <- subset(lookup, LTLA17NM == UTLA17NM)
CCG <- read_csv(url("https://opendata.arcgis.com/datasets/4010cd6fc6ce42c29581c4654618e294_0.csv"), col_types = cols(CCG18CD = col_character(),CCG18CDH = col_skip(),CCG18NM = col_character(), FID = col_skip())) %>%
rename(Area_Name = CCG18NM,
Area_Code = CCG18CD) %>%
mutate(Area_Type = "Clinical Commissioning Group (2018)")
Region <- read_csv(url("https://opendata.arcgis.com/datasets/cec20f3a9a644a0fb40fbf0c70c3be5c_0.csv"), col_types = cols(RGN17CD = col_character(),  RGN17NM = col_character(),  RGN17NMW = col_character(),  FID = col_integer()))
colnames(Region) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID")
Region$Area_Type <- "Region"
Region <- Region[c("Area_Code", "Area_Name", "Area_Type")]
LAD <- subset(LAD, substr(LAD$LAD17CD, 1, 1) == "E")
LAD$Area_Type <- ifelse(LAD$LAD17NM %in% UA$LTLA17NM, "Unitary Authority", "District")
colnames(LAD) <- c("Area_Code", "Area_Name", "Area_Name_Welsh", "FID", "Area_Type")
LAD <- LAD[c("Area_Code", "Area_Name", "Area_Type")]
Counties$Area_type <- "County"
colnames(Counties) <- c("Area_Code", "Area_Name", "Col2", "Col3", "FID", "Area_Type")
Counties <- Counties[c("Area_Code", "Area_Name", "Area_Type")]
England <- data.frame(Area_Code = "E92000001", Area_Name = "England", Area_Type = "Country")
Areas <- rbind(LAD, CCG, Counties, Region, England)
rm(LAD, CCG, Counties, Region, England, UA)
write.csv(lookup, "./Area_lookup_table.csv", row.names = FALSE)
write.csv(Areas, "./Area_types_table.csv", row.names = FALSE)
}
Lookup <- read_csv("./Area_lookup_table.csv", col_types = cols(LTLA17CD = col_character(),LTLA17NM = col_character(), UTLA17CD = col_character(),  UTLA17NM = col_character(), FID = col_character()))
